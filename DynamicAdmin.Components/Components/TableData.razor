@using System.ComponentModel.DataAnnotations
@using System.Reflection
@using DynamicAdmin.Components.Helpers
@typeparam TEntity

<h2>@TableName</h2>

<div class="d-flex justify-content-between align-items-center mb-3">
    <button class="btn btn-primary" @onclick="OpenCreateModal"><i class="fa fa-file-text-o"></i>Create </button>

    <div class="d-flex align-items-center w-25">
        <input @bind="_searchQuery" placeholder="Search..." class="form-control mr-2"/>
        <button @onclick="ApplySearch" class="btn btn-info">Search</button>
    </div>

</div>

@if (_data != null && _data.Any())
{
    <table class="table table-striped table-hover mt-5">
        <thead>
        <tr>
            @foreach (var prop in _data.FirstOrDefault().GetPropertiesWithoutRelations().Take(10))
            {
                var header = prop.Name;
                <th>@header</th>
            }
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in _data)
        {
            <tr>
                @foreach (var prop in item.GetPropertiesWithoutRelations().Take(10))
                {
                    <td>@prop.Value</td>
                }
                <td>
                    <div class="d-flex">
                        <button class="btn btn-default btn-sm" @onclick="() => EditItem(item)">
                            <i class="fa fa-edit"></i>
                        </button>
                        <button class="btn btn-default btn-sm" @onclick="() => DeleteItem(item)">
                            <i class="fa fa-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <!-- Render pagination controls -->
    <div class="pagination-controls">
        <ul class="pagination">
            <li class="page-item @(IsFirstPage ? "disabled" : "")">
                <button class="page-link" @onclick="PreviousPage" disabled="@IsFirstPage">Previous</button>
            </li>

            @for (int i = 1; i <= TotalPages; i++)
            {
                int localI = i; // Capture variable for use in lambda
                <li class="page-item @(localI == _currentPage ? "active" : "")">
                    <button class="page-link" @onclick="() => GoToPage(localI)">@localI</button>
                </li>
            }

            <li class="page-item @(IsLastPage ? "disabled" : "")">
                <button class="page-link" @onclick="NextPage" disabled="@IsLastPage">Next</button>
            </li>
        </ul>
    </div>

    @* TODO bring this to seperated component*@
    @if (_isEditModalOpen && _selectedItem != null)
    {
        <div class="modal fade show d-block" tabindex="-1">
            <div class="modal-dialog modal-fullscreen w-100">
                <div class="modal-content w-100">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Data</h5>
                        <button type="button" class="close" @onclick="CloseModal">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row w-75 m-auto">
                            @foreach (var prop in _selectedItem.Properties)
                            {
                                if (prop.IsForeignKey)
                                {
                                    continue;
                                }

                                @if (prop.IsNavigationProperty)
                                {
                                    var foreignKeyProperty = prop.ForeignKeyProperty;
                                    if (foreignKeyProperty != null)
                                    {
                                        if (string.IsNullOrEmpty(_selectedStringValues[foreignKeyProperty.Name]))
                                        {
                                            _selectedStringValues[prop.Name] = _selectedStringValues[foreignKeyProperty.Name];
                                        }

                                        <div class="col-md-4 form-group">
                                            <label>@prop.Name</label>

                                            <SearchableSelect Items="prop.RelatedEntities" @bind-SelectedValue="_selectedStringValues[foreignKeyProperty.Name]"/>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="col-md-4 form-group">
                                        <label>@prop.Name</label>
                                        <input class="form-control" @bind="_selectedStringValues[prop.Name]"/>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-success" @onclick="EditSelectedItem">Save Changes</button>
                        <button class="btn btn-secondary" @onclick="CloseModal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop show"></div>
    }
}
else
{
    <h4 class="text-center mt-5">No Data</h4>
}

<CreateEntityDialog TEntity="TEntity" @bind-IsOpen="_isCreateModalOpen" OnSave="CreateEntity" OnCloseModal="CloseCreateModal"/>
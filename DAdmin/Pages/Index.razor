@page "/"
@using LegalEntity = Esel.Accounts.DataAccess.Entities.LegalEntity
@using DAdmin.Components.Components.Charts.ViewModels
@using DAdmin.Components.Components.Charts.Enums
@using DAdmin.Components.Components.Menus.ViewModels
@using Blazorise.DataGrid
@using Esel.Accounts.DataAccess.Entities.Transaction

<AdminPanel>
    <MenuItem Name="Transactions" MenuSection="MenuSection.Resources" IconClass="fa fa-table">
        <DataResource TEntity="Transaction" ResourceName="Transactions" ExcludedProperties="@(new[] { "Status", "Username" })">
            <AggregateColumn TEntity="Transaction" AggregationSelector="x => x.Amount" Aggregate="DataGridAggregateType.Sum"/>
        </DataResource>
    </MenuItem>
</AdminPanel>

<AdminPanel UseContextEntities="true">
    <MenuItem Name="Transactions" MenuSection="MenuSection.Resources" IconClass="fa fa-table">
        <DataResource TEntity="Transaction" ResourceName="Transactions" ExcludedProperties="@(new[] { "Status", "Username" })">
            <AggregateColumn TEntity="Transaction" AggregationSelector="x => x.Amount" Aggregate="DataGridAggregateType.Sum"/>
        </DataResource>
    </MenuItem>

    <MenuItem Name="Transactions" MenuSection="MenuSection.Charts" IconClass="fa fa-table">
        <TimeChart TEntity="Transaction"
                   Name="Transaction Activity"
                   ChartType="ChartType.Line"
                   AggregationType="AggregationType.Count"
                   AggregationSelector="entity => entity.Id"
                   LabelSelector="entity => entity.CreatedAt"
                   TimeInterval="ChartTimeInterval.Monthly"
                   QueryLogic="query => query"/>
    </MenuItem>
</AdminPanel>

@*Default Admin panel*@
<AdminPanel/>

@code{

    private List<IChart> charts = new List<IChart>
    {
        new Chart<LegalEntity>
        {
            Name = "Legal Resources",
            ChartType = ChartType.Line,
            AggregationType = AggregationType.Count,
            AggregationSelector = entity => entity.Id,
            LabelSelector = entity => entity.ModifiedAt.Value,
            TimeInterval = ChartTimeInterval.Monthly,
            QueryLogic = query => query
        }
    };

}
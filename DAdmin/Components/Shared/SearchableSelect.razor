@namespace DAdmin
@inherits DAdminComponent

@code {
    private string filterText;
    private IEnumerable<KeyValuePair<string, string>> filteredItems;
    private bool isDropdownOpen = false;

    [Parameter]
    public IEnumerable<KeyValuePair<string, string>> Items { get; set; } = new List<KeyValuePair<string, string>>();

    [Parameter]
    public string SelectedValue { get; set; }

    [Parameter]
    public string TextStyle { get; set; }

    [Parameter]
    public EventCallback OnClick { get; set; }

    [Parameter]
    public EventCallback<string> SelectedValueChanged { get; set; }

    protected override Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(SelectedValue))
        {
            filterText = SelectedValue;
        }

        filteredItems = Items;

        return Task.CompletedTask;
    }

    private void FilterItems()
    {
        filteredItems = string.IsNullOrEmpty(filterText)
            ? Items
            : Items.Where(i => i.Value.Contains(filterText, StringComparison.OrdinalIgnoreCase)).ToList();
    }

    private async Task SelectItem(KeyValuePair<string, string> item)
    {
        SelectedValue = item.Key;
        await SelectedValueChanged.InvokeAsync(item.Key);
        filterText = item.Value;
        await CloseDropdown();
    }

    private Task ToggleDropdown()
    {
        isDropdownOpen = !isDropdownOpen;
        return Task.CompletedTask;
    }

    private async Task CloseDropdown()
    {
        await Task.Delay(100);
        isDropdownOpen = false;
    }

}

<div class="searchable-dropdown position-relative @Class" tabindex="0" @onclick="OnClick" style="@Style">
    <input type="text" class="form-control" style="@TextStyle" @bind="filterText" @bind:event="oninput" @onfocusout="CloseDropdown" @onkeyup="FilterItems" placeholder="Search..." @onclick="ToggleDropdown"/>

    @if (isDropdownOpen)
    {
        <div class="dropdown-menu show w-100" style="overflow-x: scroll">
            @foreach (var item in filteredItems)
            {
                <a class="dropdown-item" @onclick="() => SelectItem(item)">@item.Value</a>
            }
        </div>
    }
</div>